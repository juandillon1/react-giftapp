{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categories","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","categorie","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAW5C,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAI1C,SACI,uBAAOC,KAAK,OAAOC,MAAOT,EAAYU,SAXpB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,uDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAkB,IAAjBnB,EAAgB,EAAhBA,WAAgB,ECAb,SAAEoB,GAAgB,IAAD,EACflC,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAgBzC,OAXAC,qBAAU,WACNzB,EAASqB,GACRK,MAAM,SAAAC,GACHH,EACI,CACIhB,KAAMmB,EACNL,SAAS,SAItB,CAACD,IACGE,EDfyBK,CAAa3B,GAAhCa,EADwB,EAC9BN,KAAcc,EADgB,EAChBA,QAErB,OACI,qCACI,qBAAIL,UAAU,kDAAd,cAAkEhB,EAAlE,OACCqB,GAAW,mBAAGL,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEa3BiB,EAvBM,WAAO,IAAD,EACa1C,mBAAS,CAAC,kBADvB,mBAChBc,EADgB,KACJf,EADI,KAMvB,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQe,EAAWS,KAAK,SAAAoB,GAAS,OACrB,cAAC,EAAD,CAAS7B,WAAY6B,GAAgBA,YCbzDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cef3f13b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleChangeValue = ( e ) =>{\r\n        setinputValue(e.target.value);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleChangeValue}/>\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( categories ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categories)}&limit=10&api_key=VAUJD8tIPywKBxcz5C2YDHwmKWrJNYOZ`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","export const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__slow\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\nexport const GifGrid = ({categories}) => {\r\n    const {data: images, loading} = useFetchGifs(categories);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__slow\"> {categories} </h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map(img =>\r\n                    <GifGridItem key={img.id} {...img}/>\r\n                )\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categorie ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    useEffect(() => {\r\n        getGifs( categorie )\r\n        .then( imgs => {\r\n            setState(\r\n                {\r\n                    data: imgs,\r\n                    loading: false\r\n                }\r\n            );\r\n        });\r\n    }, [categorie])\r\n    return state;\r\n}","import {useState} from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball Z']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Naruto']);\r\n    // };\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map( categoria =>\r\n                    <GifGrid categories={categoria} key={categoria}/>\r\n                )\r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}